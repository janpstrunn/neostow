#!/usr/bin/env bash

NEOSTOW_FILE="$PWD/.neostow"

if [[ ! -f "$NEOSTOW_FILE" ]]; then
  echo "Error: $NEOSTOW_FILE not found"
  exit 1
fi

function usage() {
  cat <<EOF
Neostow
Usage: neostow [flag] [command]
Available flags:
-r                     - Overwrite symlinks
-d                     - Remove all symlinks
Available commands:
help                   - Displays this message and exits
EOF
}

function create_links() {
  local source_file dest_folder
  source_file="$PWD/$1"
  dest_folder=$2
  if [ -n "$OVERWRITE" ]; then
    ln -sf "$source_file" "$dest_folder"
  elif [ -n "$DELETE" ]; then
    file=$(basename "$source_file")
    rm "$dest_folder/$file"
  else
    ln -s "$source_file" "$dest_folder"
  fi
}

function main() {
  local file_lines i threshold source_file dest_folder working_data
  declare -i file_lines
  declare -i i
  file_lines=$(wc -l <"$NEOSTOW_FILE")
  i=1
  declare -i threshold=("$file_lines"+1)
  while [ "$i" -lt "$threshold" ]; do
    working_data=$(bat --line-range "$i":"$i" "$NEOSTOW_FILE")
    source_file=$(awk -F '=' '{print $1}' <<<"$working_data")
    if [[ -f "$source_file" ]] || [[ -d "$source_file" ]]; then
      dest_folder=$(awk -F '=' '{print $2}' <<<"$working_data")
      eval dest_folder="$dest_folder"
      create_links "$source_file" "$dest_folder"
    fi
    i+=1
    unset working_data
  done
}

while getopts ":hdr" opt; do
  case "$opt" in
  r)
    OVERWRITE=true
    ;;
  d)
    DELETE=true
    ;;
  h)
    usage
    exit 0
    ;;
  ?)
    echo "Error: Invalid option '-$OPTARG'" >&2
    exit 1
    ;;
  esac
done

shift $((OPTIND - 1))

main

case "$1" in
help)
  usage
  exit 0
  ;;
