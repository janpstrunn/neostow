#!/usr/bin/env bash

# "Neostow is a 'Reinvent the wheel' project that
# aims to rewrite the stow program in SHELL.
# The motivation is to allow some features not
# present in stow by default, only.
# Neostow keeps the idea of per project config file
#
# The main goals of neostow is to allow to create
# symlinks from anywhere to anywhere in the computer.
# Also, it does lifts the 'package' way stow uses to
# manage those symlinks"

NEOSTOW_FILE="$PWD/.neostow"

if [[ ! -f "$NEOSTOW_FILE" ]]; then
  echo "Error: $NEOSTOW_FILE not found"
  exit 1
fi

function create_links() {
  local source_file dest_folder
  source_file="$1"
  dest_folder=$2
  if [ -n "$OVERWRITE" ]; then
    ln -sf "$source_file" "$dest_folder"
  elif [ -n "$DELETE" ]; then
    file=$(basename "$source_file")
    rm "$dest_folder/$file"
  else
    ln -s "$source_file" "$dest_folder"
  fi
}

function main() {
  local file_lines i threshold source_file dest_folder working_data
  declare -i file_lines
  declare -i i
  file_lines=$(wc -l "$NEOSTOW_FILE" | awk '{print $1}')
  i=1
  declare -i threshold=("$file_lines"+"$i")
  for line in $i; do
    if [ "$line" -eq "$threshold" ]; then
      break
    fi
    working_data=$PWD/$(bat --line-range "$line" "$NEOSTOW_FILE")
    source_file=$(awk -F '=' '{print $1}' <<<"$working_data")
    if [[ -f "$source_file" ]]; then
      dest_folder=$(awk -F '=' '{print $2}' <<<"$working_data")
      eval dest_folder="$dest_folder"
      create_links "$source_file" "$dest_folder"
    else
      continue
    fi
    unset working_data
  done
}

while getopts ":hdr" opt; do
  case "$opt" in
  r)
    OVERWRITE=true
    ;;
  d)
    DELETE=true
    ;;
  h)
    usage
    exit 0
    ;;
  ?)
    echo "Error: Invalid option '-$OPTARG'" >&2
    exit 1
    ;;
  esac
done

shift $((OPTIND - 1))

main
